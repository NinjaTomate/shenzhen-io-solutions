# Input variables
# X_KEYPAD

# Output variables
# P_EXTRUDE
# P_VALVE_0
# P_VALVE_1
# P_VALVE_2

# Overview
On keypress
If track 1
  Turn on extrude
  Turn on/off valves for pattern + sleep
  Turn off extrude
  Turn off valves
Same for other tracks

# First thoughts
Save valve-0 + valve-1 in READ only RAM (e.g. [valve-0[0], valve-1[0], valve-0[1], valve-1[1], ...)
  Then use mirroring for type 1 and type 2
  TODO: We would need to write valve-0 track to register, is that okay?

Hmm, what if we store all the data? How big would that be?

Maybe jump to different addresses at start?
  14 / 3
  4.667
  so 4 parts per meat per RAM
  There are 7 * 3 meat parts = 21
  21 / 4 = 5.25 -> 6
  which means read only RAM
  I don't think we could get enough pins to that if we wanted.
  Get clever.

RAM techniques:

- valve-0 and valve-1 in same memory
  - Good but lots of equality checks

- valve-0 for type 1 and type 2 in same memory
  - Need to jump to different locations but that's easy (e.g. 2 lines, not equality)

For type 3, need to output it as is

We could prob even get more clever by not setting type 2 valve 0 as it's all the same

# First iteration
## Controller 1
On keypress
Persist keypad to P pin (signals extrude is on)
  Must come first
Reset RAM positions
Sleep for 7s
Reset P pin

## Controller 2
If P_KEYPAD is on
  If style === bacon:
    Write 100 to valve-0
    Write 0 to valve-2
  Else:
    Read from valve-0 memory into ACC
    Write ACC to valve-0
    Write ACC to valve-2
If P_KEYPAD is off
  Shut off vales
Sleep 1

## Controller 3
Same as controller 2 but for middle track only
  so not ACC necessary
  and need to turn on extrude flag

-------

Looks like we need to use DX300
  and only have room for 1 MC6000
  Let's see what happens

TODO: Can we switch from `p0` to `x1` for first controller
  Then move to MC4000X

Got close with P signal but not enough NOP room

Time for X signal

X signal won't work as we need a decrement counter

Got it working after lots of wiggling \o/

Solution:

- Signal sender + countdown (MC6000)
- RAM reader (MC6000)
- 2 read only RAM
- 1 DX300

Code:

Signal sender + countdown

```
# Wait for keypad
slx x0

# Save meat type
mov x0 dat

# ACC acting as RAM index temporarily

# If it's the second type, offset RAM to 7
# DEV: ACC will be 0 due to countdown loop
teq dat 2
+ add 7

# Offset our RAM
mov acc x3
mov acc x2

# Start our countdown
mov 7 acc

LOOP:
# If we aren't done looping
tgt acc 0
  # Trigger another printning
+ mov dat x1
  # Decrement
+ sub 1
  # Wait (as required)
+ slp 1
  # Loop
+ jmp LOOP

# Otherwise, signal end event
mov 0 x1
```

RAM reader

```
# Wait for signal
SLEEP: slx x2

# Save data for comparison
mov x2 dat

# If we are done, turn off extrude and shut off valves
teq dat 0
+ mov 0 p1
+ mov 000 x3
+ jmp SLEEP

# Turn on extrude
mov 100 p1

# If we are printing bacon
teq dat 3
  # Print its pattern directly
+ mov 011 x3
  # Otherwise, read top track into memory
- mov x1 dat
  # Configure top, middle, and bottom (mirror of top for types 1/2)
- dst 0 dat
- dst 1 x0
- dst 2 dat
  # Export configuration to DX300 (valves)
- mov acc x3
```
