# Input variables
# X_METER_IN
# X_LOWER_IN
# X_HIGHER_IN

# Output variables
# X_METER_OUT
# X_LOWER_OUT
# X_HIGHER_OUT

# Gist
Packet = [ID, length, ...]

# DEV: Coming from higher ID so only send to meter or lower
On signal from HIGHER_IN
  If ID == METER_ID
    # While length--
    ACC = LENGTH
    LOOP1:
      # Proxy data to meter
      MOV HIGHER_IN METER_OUT
      ACC -= 1
      JMP LOOP1
  ELSE (ID != METER_ID, I.E. ID < METER_ID)
    # While length--
    # TODO: Any way to join loops?
    ACC = LENGTH
    LOOP2:
      # Proxy data to meter
      MOV HIGHER_IN LOWER_OUT
      ACC -= 1
      JMP LOOP2

TODO: METER_IN has 3 cases =/

After doing some exploration and logic
  We would need a 5X board to handle METER_IN on its own
  So instead of that, send data as to HIGHER_IN and LOWER_IN controllers

More realizations
  We can send METER_IN to both HIGHER_IN and LOWER_IN
  If id is higher in HIGHER_IN, do nothing
  If id is lower in LOWER_IN, do nothing
  If id is same in HIGHER_IN, send to METER_OUT
  If id is same in LOWER_IN, do nothing (prevent double sends)
  If id is lower in HIGHER_IN, send to LOWER_OUT
  If id is higher in LOWER_IN, send to HIGHER_OUT

Ran into issues
  - Cannot share inputs across METER_IN as it spreads from LOWER_IN to HIGHER_IN
  - Too much logic for proxying

  ```
  HEAD:
  slx x0
  mov x0 dat
  tgt dat x1
  + jmp HEAD
  # TODO: Set track
  # teq dat x1
  # + mov 0 dat
  # - mov 1 dat
  mov x0 acc
  LOOP:
  teq dat 0
  + mov x0 x2
  - mov x0 x3
  teq acc 0
  - sub 1
  - jmp LOOP
  ```
