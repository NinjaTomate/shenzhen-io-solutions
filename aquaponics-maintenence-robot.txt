# Input variables
# X_RADIO_RX = [DESTINATION_STATION, TOOL_CLEAN_TIME, TOOL_FEED_TIME]

# Output variables
# P_MOTOR
# P_TOOL_CLEAN
# P_TOOL_FEED

# Gist
# Read in latest packet
# TODO: If this gets too complicated, move to DAT
#   or use loop
Save RX to ACC
# If we have new instructions
IF ACC !== -999
  Pass along tool instructions to another controller
  Toggle motor in current controller

In tool controller
  Sleep for motor pulses x2
  Pulse signal for tool clean
    Send signal for tool clean
    Sleep
    Disable tool clean
  Pulse signal for tool feed
    Send signal for tool feed
    Sleep
    Disable tool feed

# Code
# MC6000
# Start with P_MOTOR = 50
@mov 50 P_MOTOR

# On first new signal
mov x0 P_PLACEHOLDER
teq P_PLACEHOLDER -999
# Overwrite position
- mov dat P_PLACEHOLDER
# TODO: Send location to other controllers
# - mov x0 x1
# - mox x0 x1

# TODO: Save clean cycles as digits in an acc?
# TODO: Prob break up in separate controllers for v1

# If we are under position, move forward
tlt ACC /* < */ DAT
+ gen P_MOTOR 1 0
+ add 1
+ mov 50 P_MOTOR
# If we are over position, move back
tgt DAT /* > */ ACC
+ gen P_MOTOR 0 1
+ sub 1
+ mov 50 P_MOTOR
slp 1
```
