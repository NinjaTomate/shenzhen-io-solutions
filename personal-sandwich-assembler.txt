# Input variables
# X_KEYPAD = {
#   -1: Cancel, 1: No cheese,
#   2: Add extra mustard, 3: Build
# }

# Output variables
# P_BREAD
# P_MEAT
# P_CHEESE
# P_MUSTARD
# P_FLAG

# Gist
Use RAM for flags as ACC is bulky
Possibly use RAM?

Save flags on ACC as digits

Follow instructions procedurally

Use DX300 for multiplexing easily

# Code
Wait for signal

Initial thoughts were to use ACC
and then handle all instructions in single script
but going to be too bulky

so swapping to ram and this is an interim state

Controller 1 MC6000

```
START:
# Wait for start signal
slx x1

# Save input
mov x1 dat

# If DAT < 3 and DAT > 0 as input
# DEV: This means option inputs
tlt dat 3
+ tgt dat 0
  # Save option in its RAM slot
  # DEV: This is a security hole as it's user input for memory
+ mov dat x0
+ mov 1 x3
  # Jump to START to prevent reset
+ jmp START

# If we should start, then start
teq dat 3
  # Send start signal
+ mov 100 x2
  # Wait for RAM to be used before reset
  # DEV: Not accurate but good enough
+ slp 7
# Otherwise (-1), continue with a reset
# Reset after completion too
mov 1 x0
mov 0 x3
mov 0 x3
```

Controller 2 MC6000

# Wait for start signal
slx x1
# Flush signal
mov x1 null
# Drop bread + sleep
gen p1 1 0
# Drop meat + sleep
mov 100 x2
slp 1
# Access cheese RAM
mov 1 x0
# If cheese (i.e. not "no cheese"), drop it + sleep
teq x3 1
- mov 010 x2
- slp 1
- mov 000 x2
# Drop mustard
gen p0 1 0
# Mustard RAM already accessed
# If extra mustard, drop it + sleep
teq x3 1
+ gen p0 1 0
# Drop bread + sleep
gen p1 1 0

# TODO: Need to drop + hold flag
