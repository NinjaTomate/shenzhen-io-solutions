# Input variables
# P_RANDOM

# Output variables
# P_SPEAKER

# Gist
Read from random
If random is 1
  then play track 1
    Read from RAM 1
    DEV: We could use -1 terminators
      but going for 12 units is fine too
If random is 2
  then play track 2

# Code
Too many lines but gist is as above

# If play track 1
teq p0 1
  # Reset RAM 1
+ mov 0 x1
  # Play RAM 1
+ jmp LOOP1
teq p0 2
  # Reset RAM 2
+ mov 0 x3
  # Play RAM 2
+ jmp LOOP2
# Go to sleep (do nothing)
jmp SLEEP

LOOP1:
  mov x0 acc
  teq acc -1
  + jmp SLEEP
LOOP2:

SLEEP:
slp 1


teq p0 1
+ mov 100
+ jmp LOOP1
teq p0 2
+ mov 0 x3
+ jmp LOOP2
LOOP1:
  mov x0 acc
  teq acc -1
  + jmp SLEEP
LOOP2:

SLEEP:
slp 1

Tried a circuit with same speaker but realized normal is 50
  so that won't work

Broken by if/else logic and not enough lines

# If we have 1 or 2 (i.e. between 0 and 3)
tgt p0 0
+ tlt p0 3
# Reset addresses
+ mov 0 x1
+ mov 0 x3
# Reset decrement counter
+ mov 14 acc
# Save which track to use
+ mov p0 dat
# Reset speaker
mov 50 p1
# If we have music to play
tgt acc 0
# Decrement counter
+ sub 1
# If we are playing track 1, play it
+ teq dat 1
+ mov x1 p1
# Otherwise, play track 2
- mov x2 p1
slp 1

TODO: Try out 1 controller to reset addresses
  and another to play back tracks

TODO: Set excess music to 50 if we are using acc/14 technique
