# Input variables
P_START_STOP
P_RESET_OFF

# Output variables
X_DISPLAY

# Gist
- Initially device is off
- Turn on by pressing start/stop once
- Once device is on, press start/stop to start counter
- Counter is +1 for every 2 time units on
- On P_RESET_OFF press:
    - If not running and > 0, reset to 0
    - If not running and = 0, turn off
    - If running, ignored

TODO: If we need to save input PINs we can use a DX300

Various thoughts:

- Could have an always running counter with a reset signal (due to 2 time units being weird)
- Will likely need to maintain running state in 1 controller
    - It should read current count from another controller via `P_` flag if possible

First proof of concept:

- Get on/off working

```
# Compare start/stop button via DX300
tcp x1 010
# If no buttons, then sleep
- jmp slp
# If P_RESET_OFF, then turn off display
+ mov -999 x3
+ jmp slp

# Otherwise (P_START_STOP was pressed), turn on display
mov 0 x3

# Sleep
slp: slp 1
```
