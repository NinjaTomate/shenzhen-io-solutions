# Input variables
# P_RADAR_SYNC
# P_RADAR_PING
# X_RADIO_RX (non-blocking)

# Output variables
# X_RADIO_TX
# P_SPEAKER

# First iteration
## Notes
Packet =
  [1, length, audio for $length units...]
  OR
  [2, badge id] -> Send back sector

Ping and sector are in donut for some reason, let's unroll that...

|                   | SYNC_0 |  20 |  40 |  60 |  80 | 100 |
|-------------------|--------|-----|-----|-----|-----|-----|
| 80 <= PING <= 100 |    100 | 100 | 100 | 100 | 100 | 100 |
| 50 <  PING <   80 |    600 | 200 | 201 | 202 | 203 | 204 |
| 0  <= PING <= 50  |    600 | 700 | 700 | 700 | 700 | 700 |

Logic which should work for ping/sync calc

if PING >= 80 (i.e. ! < 80)
  set 100
  jmp SLEEP
if SYNC === 0
  set 600
  jmp SLEEP
if PING <= 50 (i.e ! > 50)
  set 700
  jmp SLEEP

# Derive offset of 0, 1, ..., 4 for 200 from SYNC
acc = sync (e.g. 20, 40, ..., 100)
acc -= 20 (e.g. 0, 20, ..., 80)
dgt 1 acc (e.g. 0, 2, ..., 8)
  Ugh, how do we divide...
  Oh, simpler... loop and subtract until data is 0

acc = sync (e.g. 20, 40, ... 100)
acc -= 20 (initial offset) -- (e.g. 0, 20, ..., 80)
LOOP:
  if acc > 0:
    acc -= 21 (e.g. 0, -1, -2, ..., -4)
    LOOP
acc *= -1 (e.g. 0, 1, 2, ..., 4)
acc += 200 (e.g. 200, 201, 202, ..., 204)
set acc
